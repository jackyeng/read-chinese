[{"C:\\Users\\Jacky\\OneDrive\\Documents\\GitHub\\read-chinese\\src\\index.js":"1","C:\\Users\\Jacky\\OneDrive\\Documents\\GitHub\\read-chinese\\src\\App.js":"2","C:\\Users\\Jacky\\OneDrive\\Documents\\GitHub\\read-chinese\\src\\reportWebVitals.js":"3","C:\\Users\\Jacky\\OneDrive\\Documents\\GitHub\\read-chinese\\src\\components\\Characters.js":"4","C:\\Users\\Jacky\\OneDrive\\Documents\\GitHub\\read-chinese\\src\\components\\Test.js":"5","C:\\Users\\Jacky\\OneDrive\\Documents\\GitHub\\read-chinese\\src\\components\\Practice.js":"6","C:\\Users\\Jacky\\OneDrive\\Documents\\GitHub\\read-chinese\\src\\components\\About.js":"7","C:\\Users\\Jacky\\OneDrive\\Documents\\GitHub\\read-chinese\\src\\components\\Navbar.js":"8","C:\\Users\\Jacky\\OneDrive\\Documents\\GitHub\\read-chinese\\src\\components\\Typer.js":"9","C:\\Users\\Jacky\\OneDrive\\Documents\\GitHub\\read-chinese\\src\\components\\chinesedata.js":"10"},{"size":517,"mtime":1608560558899,"results":"11","hashOfConfig":"12"},{"size":1080,"mtime":1608562437985,"results":"13","hashOfConfig":"12"},{"size":375,"mtime":1608560558905,"results":"14","hashOfConfig":"12"},{"size":117,"mtime":1608560558848,"results":"15","hashOfConfig":"12"},{"size":4915,"mtime":1608560558855,"results":"16","hashOfConfig":"12"},{"size":155,"mtime":1608560558853,"results":"17","hashOfConfig":"12"},{"size":149,"mtime":1608560558846,"results":"18","hashOfConfig":"12"},{"size":1203,"mtime":1608560558851,"results":"19","hashOfConfig":"12"},{"size":6092,"mtime":1608575936601,"results":"20","hashOfConfig":"12"},{"size":192659,"mtime":1608560558864,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"472x5",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\Jacky\\OneDrive\\Documents\\GitHub\\read-chinese\\src\\index.js",[],["46","47"],"C:\\Users\\Jacky\\OneDrive\\Documents\\GitHub\\read-chinese\\src\\App.js",["48"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport Test from './components/Test';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\nimport Navbar from './components/Navbar';\r\nimport Practice from './components/Practice';\r\nimport Characters from './components/Characters';\r\nimport Typer from './components/Typer';\r\nimport About from './components/About';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <Router>\r\n          <div className=\"App-navbar\">\r\n            <Navbar  fixed=\"top\"/>\r\n          </div>\r\n          <br/>\r\n          <div className=\"App-page\">\r\n            <Route path=\"/practice\" component={Practice}/>\r\n            <Route path=\"/test\" component={Test}/>\r\n            <Route path=\"/typer\" component={Typer}/>\r\n            <Route path=\"/characters\" component={Characters}/>\r\n            <Route path=\"/about\" component={About}/>\r\n          </div>\r\n\r\n        </Router>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Jacky\\OneDrive\\Documents\\GitHub\\read-chinese\\src\\reportWebVitals.js",[],"C:\\Users\\Jacky\\OneDrive\\Documents\\GitHub\\read-chinese\\src\\components\\Characters.js",[],"C:\\Users\\Jacky\\OneDrive\\Documents\\GitHub\\read-chinese\\src\\components\\Test.js",["49","50","51","52"],"import React,{useEffect} from \"react\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles, ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport axios from 'axios';\r\nimport {chinese} from './chinesedata';\r\nimport { green, red } from \"@material-ui/core/colors\";\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        width: '5',\r\n      },\r\n    \r\n    },\r\n    alertRoot: {\r\n        width: '100%',\r\n        '& > * + *': {\r\n          marginTop: theme.spacing(2),\r\n        },\r\n      },\r\n    TextField: {\r\n        color: \"white\",\r\n        fontSize: \"18px\",\r\n        borderColor: 'white',\r\n    },\r\n    underline: {\r\n        color: 'red' ,\r\n        '&::after': {\r\n          border: '2px solid red'\r\n        }\r\n      }\r\n\r\n  }));\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: red,\r\n  },\r\n});\r\n\r\nexport default function Test(){\r\n    const [selectedCharacter, setSelectedCharacter] = React.useState(0);\r\n    const [boolean, setBoolean] = React.useState(true);\r\n    const [inputValue, setInputValue] = React.useState(\"\");\r\n    const classes = useStyles();\r\n\r\n    const [answer, setAnswer] = React.useState([]);\r\n    const [openCorrect, setOpenCorrect] = React.useState(false);\r\n    const [openWrong, setOpenWrong] = React.useState(false);\r\n    const [chinese, setChinese] = React.useState({chinese:[]});\r\n    \r\n    const handleClick = () => {\r\n        handleClose();\r\n        if (inputValue === chinese.chinese[selectedCharacter].pinyinWithoutTone){\r\n            setOpenCorrect(true);\r\n        }\r\n        else {\r\n            setOpenWrong(true);\r\n        }\r\n    };\r\n\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n        return;\r\n        }\r\n        setOpenCorrect(false);\r\n        setOpenWrong(false);\r\n    };\r\n\r\n    //Update value of input text field\r\n    const handleChange = (e) => {\r\n        e.preventDefault();\r\n        setInputValue(e.target.value);\r\n    };\r\n  \r\n    //Handle users submit enter\r\n    const handleKeyDown = (e) => {\r\n        if (e.keyCode === 13){\r\n            e.preventDefault();\r\n            const previousChinese = chinese.chinese[selectedCharacter];\r\n            setAnswer([previousChinese.pinyin, inputValue, previousChinese.character, previousChinese.meaning]);\r\n            setSelectedCharacter((selectedCharacter + 1 < chinese.chinese.length ) ? selectedCharacter + 1 : 0);\r\n            handleClick();\r\n\r\n            setInputValue(\"\");\r\n            console.log(chinese.chinese[selectedCharacter].character);\r\n         }\r\n    };\r\n\r\n    React.useEffect(() =>{ \r\n        axios.get('http://localhost:5000/chinese/')\r\n      .then(response => {\r\n        setChinese({ chinese: response.data })\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      })\r\n        \r\n    }, []);\r\n    /*React.useEffect(() => { // post chinese characters to mongodb\r\n        var i;\r\n        for (i = 0; i < 100; i++){\r\n            axios.post('http://localhost:5000/chinese/add', chinese[i])\r\n        }   \r\n            \r\n      }, []);*/\r\n   \r\n    return(\r\n        <div>\r\n            <h1>\r\n                {chinese.chinese[selectedCharacter] ? chinese.chinese[selectedCharacter].character : \"\"}\r\n            </h1>\r\n            <form className={classes.root} noValidate autoComplete=\"off\">\r\n                <ThemeProvider theme={theme}>\r\n                  {boolean && <TextField value={inputValue} id=\"standard-basic\" onChange={handleChange} onKeyDown={handleKeyDown} label=\"\" inputProps={{ underline: classes.underline, className: classes.TextField, min: 0, style: { textAlign: 'center' }}} />}\r\n                </ThemeProvider>\r\n            </form>\r\n            <div className={classes.alertRoot}>\r\n                <Snackbar anchorOrigin={{vertical:'center', horizontal:'center'}} open={openCorrect} onClose={handleClose}>\r\n                    <Alert onClose={handleClose} severity=\"success\">\r\n                        Correct: {answer[2]} - {answer[0]}\r\n                        <br/>\r\n                        Meaning: {answer[3]}\r\n                        \r\n                    </Alert>\r\n                </Snackbar>\r\n                <Snackbar anchorOrigin={{vertical:'center', horizontal:'center'}} open={openWrong} onClose={handleClose}>\r\n                    <Alert onClose={handleClose} severity=\"error\">\r\n                        Your answer: {answer[1]}\r\n                        <br/>\r\n                        Correct answer: {answer[2]} - {answer[0]}\r\n                        <br/>\r\n                        Meaning: {answer[3]}\r\n                    </Alert>\r\n                </Snackbar>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n","C:\\Users\\Jacky\\OneDrive\\Documents\\GitHub\\read-chinese\\src\\components\\Practice.js",[],"C:\\Users\\Jacky\\OneDrive\\Documents\\GitHub\\read-chinese\\src\\components\\About.js",[],"C:\\Users\\Jacky\\OneDrive\\Documents\\GitHub\\read-chinese\\src\\components\\Navbar.js",["53"],"import React from 'react';\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport Link from '@material-ui/core/Link';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport './../index.css';\r\nimport logo from './logo.png';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    customLink: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        width: '5',\r\n      },\r\n    \r\n    },\r\n\r\n  }));\r\n\r\nexport default function ActiveLastBreadcrumb() {\r\n \r\n  return (\r\n    <Breadcrumbs separator=\"     \" aria-label=\"breadcrumb\">\r\n      <Link className=\"custom-link\" color=\"white\" href=\"/\">\r\n        <img className=\"home-logo\" src={logo} alt=\"\"></img>\r\n      </Link>\r\n      <Link className=\"custom-link\" color=\"white\" href=\"/practice\" >\r\n        practice\r\n      </Link>\r\n      <Link className=\"custom-link\" color=\"white\" href=\"/test\" >\r\n        test\r\n      </Link>\r\n      <Link className=\"custom-link\" color=\"white\" href=\"/typer\">\r\n        typer\r\n      </Link>\r\n      <Link className=\"custom-link\" color=\"white\" href=\"/characters\">\r\n        characters\r\n      </Link>\r\n      <Link className=\"custom-link\" color=\"white\" href=\"/about\">\r\n        about\r\n      </Link>\r\n    </Breadcrumbs>\r\n  );\r\n}","C:\\Users\\Jacky\\OneDrive\\Documents\\GitHub\\read-chinese\\src\\components\\Typer.js",["54","55","56"],"C:\\Users\\Jacky\\OneDrive\\Documents\\GitHub\\read-chinese\\src\\components\\chinesedata.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":1,"column":8,"nodeType":"63","messageId":"64","endLine":1,"endColumn":12},{"ruleId":"61","severity":1,"message":"65","line":1,"column":15,"nodeType":"63","messageId":"64","endLine":1,"endColumn":24},{"ruleId":"61","severity":1,"message":"66","line":7,"column":9,"nodeType":"63","messageId":"64","endLine":7,"endColumn":16},{"ruleId":"61","severity":1,"message":"67","line":8,"column":10,"nodeType":"63","messageId":"64","endLine":8,"endColumn":15},{"ruleId":"61","severity":1,"message":"68","line":50,"column":21,"nodeType":"63","messageId":"64","endLine":50,"endColumn":31},{"ruleId":"61","severity":1,"message":"69","line":8,"column":7,"nodeType":"63","messageId":"64","endLine":8,"endColumn":16},{"ruleId":"61","severity":1,"message":"68","line":65,"column":21,"nodeType":"63","messageId":"64","endLine":65,"endColumn":31},{"ruleId":"70","severity":1,"message":"71","line":135,"column":10,"nodeType":"72","endLine":135,"endColumn":22,"suggestions":"73"},{"ruleId":"70","severity":1,"message":"74","line":174,"column":8,"nodeType":"72","endLine":174,"endColumn":17,"suggestions":"75"},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'chinese' is defined but never used.","'green' is defined but never used.","'setBoolean' is assigned a value but never used.","'useStyles' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'chinese.chinese'. Either include it or remove the dependency array.","ArrayExpression",["78"],"React Hook React.useEffect has a missing dependency: 'organiseDisplay'. Either include it or remove the dependency array.",["79"],"no-global-assign","no-unsafe-negation",{"desc":"80","fix":"81"},{"desc":"82","fix":"83"},"Update the dependencies array to be: [chinese.chinese, inputValue]",{"range":"84","text":"85"},"Update the dependencies array to be: [divList, organiseDisplay]",{"range":"86","text":"87"},[3797,3809],"[chinese.chinese, inputValue]",[4942,4951],"[divList, organiseDisplay]"]