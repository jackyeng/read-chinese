[{"/Users/Jacky/Documents/GitHub/read-chinese/src/index.js":"1","/Users/Jacky/Documents/GitHub/read-chinese/src/App.js":"2","/Users/Jacky/Documents/GitHub/read-chinese/src/reportWebVitals.js":"3","/Users/Jacky/Documents/GitHub/read-chinese/src/components/Groupbar.js":"4","/Users/Jacky/Documents/GitHub/read-chinese/src/components/GroupbarElement.js":"5","/Users/Jacky/Documents/GitHub/read-chinese/src/components/SetElement.js":"6","/Users/Jacky/Documents/GitHub/read-chinese/src/components/TypeAssist.js":"7","/Users/Jacky/Documents/GitHub/read-chinese/src/page/Test.js":"8","/Users/Jacky/Documents/GitHub/read-chinese/src/page/Characters.js":"9","/Users/Jacky/Documents/GitHub/read-chinese/src/page/Practice.js":"10","/Users/Jacky/Documents/GitHub/read-chinese/src/page/Navbar.js":"11","/Users/Jacky/Documents/GitHub/read-chinese/src/page/Typer.js":"12","/Users/Jacky/Documents/GitHub/read-chinese/src/page/About.js":"13","/Users/Jacky/Documents/GitHub/read-chinese/src/components/ReferenceTable.js":"14"},{"size":500,"mtime":1608004129061,"results":"15","hashOfConfig":"16"},{"size":986,"mtime":1609613986340,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1608004129069,"results":"18","hashOfConfig":"16"},{"size":3641,"mtime":1609613986341,"results":"19","hashOfConfig":"16"},{"size":2500,"mtime":1609613986386,"results":"20","hashOfConfig":"16"},{"size":2403,"mtime":1609613986406,"results":"21","hashOfConfig":"16"},{"size":4834,"mtime":1609613986341,"results":"22","hashOfConfig":"16"},{"size":1182,"mtime":1609613986341,"results":"23","hashOfConfig":"16"},{"size":109,"mtime":1609613986341,"results":"24","hashOfConfig":"16"},{"size":5223,"mtime":1609613986340,"results":"25","hashOfConfig":"16"},{"size":949,"mtime":1609613986427,"results":"26","hashOfConfig":"16"},{"size":5900,"mtime":1609613986341,"results":"27","hashOfConfig":"16"},{"size":132,"mtime":1609613986341,"results":"28","hashOfConfig":"16"},{"size":2473,"mtime":1609613986341,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"ftj0oy",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/Users/Jacky/Documents/GitHub/read-chinese/src/index.js",[],["61","62"],"/Users/Jacky/Documents/GitHub/read-chinese/src/App.js",[],"/Users/Jacky/Documents/GitHub/read-chinese/src/reportWebVitals.js",[],"/Users/Jacky/Documents/GitHub/read-chinese/src/components/Groupbar.js",[],"/Users/Jacky/Documents/GitHub/read-chinese/src/components/GroupbarElement.js",[],"/Users/Jacky/Documents/GitHub/read-chinese/src/components/SetElement.js",[],"/Users/Jacky/Documents/GitHub/read-chinese/src/components/TypeAssist.js",[],"/Users/Jacky/Documents/GitHub/read-chinese/src/page/Test.js",["63","64","65"],"import React from \"react\";\nimport {\n  makeStyles,\n  ThemeProvider,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\n\nimport axios from \"axios\";\nimport { red } from \"@material-ui/core/colors\";\nimport TypeAssist from \"./../components/TypeAssist\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"5\",\n    },\n  },\n  alertRoot: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n  },\n  TextField: {\n    color: \"white\",\n    fontSize: \"18px\",\n    borderColor: \"white\",\n  },\n  underline: {\n    color: \"red\",\n    \"&::after\": {\n      border: \"2px solid red\",\n    },\n  },\n}));\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: red,\n  },\n});\n\nexport default function Test() {\n  const classes = useStyles();\n\n  const [chinese, setChinese] = React.useState({ chinese: [] });\n\n  React.useEffect(() => {\n    axios\n      .get(\"http://localhost:5000/chinese/\")\n      .then((response) => {\n        setChinese({ chinese: response.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  return (\n    <TypeAssist practice={{ chinese: chinese }} />\n  );\n}\n","/Users/Jacky/Documents/GitHub/read-chinese/src/page/Characters.js",[],"/Users/Jacky/Documents/GitHub/read-chinese/src/page/Practice.js",[],"/Users/Jacky/Documents/GitHub/read-chinese/src/page/Navbar.js",[],"/Users/Jacky/Documents/GitHub/read-chinese/src/page/Typer.js",["66","67"],"import React, { useEffect } from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport {\n  makeStyles,\n  ThemeProvider,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport axios from \"axios\";\nimport { red } from \"@material-ui/core/colors\";\nimport \"./../index.css\";\nimport BackspaceIcon from \"@material-ui/icons/Backspace\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"5\",\n    },\n  },\n  alertRoot: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n  },\n  TextField: {\n    color: \"white\",\n    fontSize: \"18px\",\n  },\n  underline: {\n    color: \"red\",\n    \"&::after\": {\n      border: \"2px solid red\",\n    },\n  },\n  root2: {\n    flexGrow: 1,\n    fontSize: 15,\n    marginTop: 40,\n  },\n  paper: {\n    padding: theme.spacing(1),\n    textAlign: \"center\",\n    color: \"white\",\n    backgroundColor: \"transparent\",\n    boxShadow: \"none\",\n    justify: \"center\",\n    height: 194,\n  },\n  control: {\n    padding: theme.spacing(2),\n  },\n}));\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: red,\n  },\n});\n\nexport default function Test() {\n  const classes = useStyles();\n\n  const [selectedCharacter, setSelectedCharacter] = React.useState(0);\n  const [inputValue, setInputValue] = React.useState(\"\");\n  const [divList, setDivList] = React.useState([]);\n  const [selectList, setSelectList] = React.useState([]);\n  const [chinese, setChinese] = React.useState({ chinese: [] });\n  const [result, setResult] = React.useState(\"\");\n  \n  //Update value of input text field\n  const handleChange = (e) => {\n    e.preventDefault();\n    setInputValue(e.target.value);\n  };\n\n  function isNumber(n) {\n    return !isNaN(parseFloat(n)) && !isNaN(n - 0);\n  }\n\n  //Update typed Chinese characters by adding the selected character\n  const handleResult = (e) => {\n    if (e < divList.length) {\n      setResult(result + selectList[e]);\n      setInputValue(\"\"); //Clear TextField\n    }\n  };\n\n  //Clear typed Chinese characters\n  const handleClear = () => {\n    setResult(\"\");\n  };\n\n  //Handle deletion of typed Chinese characters\n  const handleDelete = () => {\n    setResult(result.slice(0, -1));\n  };\n\n  //Checks user input when any key is pressed \n  const handleKeyDown = (e) => {\n    if (isNumber(String.fromCharCode(e.keyCode)) && divList.length > 0) {\n      handleResult(e.keyCode - 48);\n    }\n    if (e.keyCode === 13) {\n      e.preventDefault();\n\n      setSelectedCharacter(\n        selectedCharacter + 1 < chinese.chinese.length\n          ? selectedCharacter + 1\n          : 0\n      );\n      setInputValue(\"\"); //Clear TextField\n      setDivList([]); //Clear Chinese characters selection options\n    }\n  };\n\n  useEffect(() => {\n    if (Number(inputValue) || inputValue === \"0\") {\n      setInputValue(\"\");\n    }\n\n    if (inputValue) {\n      const filtered = chinese.chinese.filter(\n        (el) => el.pinyinWithoutTone === inputValue\n      );\n      const divList = [];\n      const selectList = [];\n      for (var i = 0; i < filtered.length; i++) {\n        divList.push(\n          <div className=\"result\">\n            {String(i) +\n              \" - \" +\n              (filtered[i].character + \": \" + filtered[i].meaning)}\n          </div>\n        );\n\n        selectList.push(filtered[i].character);\n      }\n      setDivList(divList);\n      setSelectList(selectList);\n    }\n  }, [inputValue]);\n\n  const [display, setDisplay] = React.useState(\n    <Paper className={classes.paper} />\n  );\n  \n  // Display options in a nicely formatted n columns x 6 rows \n  const organiseDisplay = () => {\n    setDisplay(<Paper className={classes.paper} />);\n    if (divList.length > 0) {\n      var display = [];\n      var temp = [...divList];\n      const result = new Array(Math.ceil(temp.length / 6))\n        .fill()\n        .map((_) => temp.splice(0, 6));\n\n      for (var i = 0; i < Math.ceil(divList.length / 6); i++) {\n        display.push(\n          <Grid key={i} item>\n            <Paper className={classes.paper}>{result[i]}</Paper>\n          </Grid>\n        );\n      }\n      setDisplay(display);\n    }\n  };\n\n  React.useEffect(() => {\n    axios\n      .get(\"http://localhost:5000/chinese/\")\n      .then((response) => {\n        setChinese({ chinese: response.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  React.useEffect(() => {\n    organiseDisplay();\n  }, [divList]);\n\n  return (\n    <div>\n      {/* Display list of Chinese characters corresponding to user's input */}\n      <Grid container className={classes.root2} spacing={2}>\n        <Grid item xs={12}>\n          <Grid container justify=\"center\" spacing={2}>\n            {display}\n          </Grid>\n        </Grid>\n      </Grid>\n\n      {/* Handles user input and deletion/clearing of typed Chinese characters */}\n      <form className={classes.root} noValidate autoComplete=\"off\">\n        <ThemeProvider theme={theme}>\n            <TextField\n              value={inputValue}\n              id=\"standard-basic\"\n              onChange={handleChange}\n              onKeyDown={handleKeyDown}\n              label=\"\"\n              inputProps={{\n                underline: classes.underline,\n                className: classes.TextField,\n                min: 0,\n                style: { textAlign: \"center\" },\n              }}\n            />\n        </ThemeProvider>\n      </form>\n      <IconButton className=\"no-frame\" onClick={() => handleDelete()}>\n        <BackspaceIcon />\n      </IconButton>\n      <IconButton className=\"no-frame\" onClick={() => handleClear()}>\n        <DeleteIcon />\n      </IconButton>\n\n      {/* Display typed Chinese characters */}\n      <div className=\"result2\">{result}</div>\n    </div>\n  );\n}\n","/Users/Jacky/Documents/GitHub/read-chinese/src/page/About.js",[],"/Users/Jacky/Documents/GitHub/read-chinese/src/components/ReferenceTable.js",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":4,"column":3,"nodeType":"74","messageId":"75","endLine":4,"endColumn":16},{"ruleId":"72","severity":1,"message":"76","line":39,"column":7,"nodeType":"74","messageId":"75","endLine":39,"endColumn":12},{"ruleId":"72","severity":1,"message":"77","line":46,"column":9,"nodeType":"74","messageId":"75","endLine":46,"endColumn":16},{"ruleId":"78","severity":1,"message":"79","line":146,"column":6,"nodeType":"80","endLine":146,"endColumn":18,"suggestions":"81"},{"ruleId":"78","severity":1,"message":"82","line":186,"column":6,"nodeType":"80","endLine":186,"endColumn":15,"suggestions":"83"},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'ThemeProvider' is defined but never used.","Identifier","unusedVar","'theme' is assigned a value but never used.","'classes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'chinese.chinese'. Either include it or remove the dependency array.","ArrayExpression",["86"],"React Hook React.useEffect has a missing dependency: 'organiseDisplay'. Either include it or remove the dependency array.",["87"],"no-global-assign","no-unsafe-negation",{"desc":"88","fix":"89"},{"desc":"90","fix":"91"},"Update the dependencies array to be: [chinese.chinese, inputValue]",{"range":"92","text":"93"},"Update the dependencies array to be: [divList, organiseDisplay]",{"range":"94","text":"95"},[3571,3583],"[chinese.chinese, inputValue]",[4586,4595],"[divList, organiseDisplay]"]