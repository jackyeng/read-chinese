[{"/Users/Jacky/Documents/GitHub/read-chinese/src/index.js":"1","/Users/Jacky/Documents/GitHub/read-chinese/src/App.js":"2","/Users/Jacky/Documents/GitHub/read-chinese/src/reportWebVitals.js":"3","/Users/Jacky/Documents/GitHub/read-chinese/src/components/chinesedata.js":"4","/Users/Jacky/Documents/GitHub/read-chinese/src/components/Navbar.js":"5","/Users/Jacky/Documents/GitHub/read-chinese/src/components/Test.js":"6","/Users/Jacky/Documents/GitHub/read-chinese/src/components/Practice.js":"7","/Users/Jacky/Documents/GitHub/read-chinese/src/components/About.js":"8","/Users/Jacky/Documents/GitHub/read-chinese/src/components/Characters.js":"9","/Users/Jacky/Documents/GitHub/read-chinese/src/components/Typer.js":"10","/Users/Jacky/Documents/GitHub/read-chinese/src/components/Groupbar.js":"11","/Users/Jacky/Documents/GitHub/read-chinese/src/components/GroupbarElement.js":"12"},{"size":500,"mtime":1608004129061,"results":"13","hashOfConfig":"14"},{"size":1044,"mtime":1608561800198,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1608004129069,"results":"16","hashOfConfig":"14"},{"size":180660,"mtime":1608465841255,"results":"17","hashOfConfig":"14"},{"size":1187,"mtime":1608617163158,"results":"18","hashOfConfig":"14"},{"size":4764,"mtime":1608545069714,"results":"19","hashOfConfig":"14"},{"size":1973,"mtime":1609176559180,"results":"20","hashOfConfig":"14"},{"size":134,"mtime":1608461645460,"results":"21","hashOfConfig":"14"},{"size":109,"mtime":1608520758461,"results":"22","hashOfConfig":"14"},{"size":5889,"mtime":1608617233046,"results":"23","hashOfConfig":"14"},{"size":1577,"mtime":1609176493529,"results":"24","hashOfConfig":"14"},{"size":2761,"mtime":1609176507498,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"ftj0oy",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Jacky/Documents/GitHub/read-chinese/src/index.js",[],["55","56"],"/Users/Jacky/Documents/GitHub/read-chinese/src/App.js",["57"],"import logo from './logo.svg';\nimport './App.css';\nimport Test from './components/Test';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Practice from './components/Practice';\nimport Characters from './components/Characters';\nimport Typer from './components/Typer';\nimport About from './components/About';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Router>\n          <div className=\"App-navbar\">\n            <Navbar  fixed=\"top\"/>\n          </div>\n          <br/>\n          <div className=\"App-page\">\n            <Route path=\"/practice\" component={Practice}/>\n            <Route path=\"/test\" component={Test}/>\n            <Route path=\"/typer\" component={Typer}/>\n            <Route path=\"/characters\" component={Characters}/>\n            <Route path=\"/about\" component={About}/>\n          </div>\n\n        </Router>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/Jacky/Documents/GitHub/read-chinese/src/reportWebVitals.js",[],"/Users/Jacky/Documents/GitHub/read-chinese/src/components/chinesedata.js",[],"/Users/Jacky/Documents/GitHub/read-chinese/src/components/Navbar.js",["58","59","60"],"import React from 'react';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport {makeStyles,createMuiTheme,ThemeProvider} from '@material-ui/core/styles';\nimport './../index.css';\nimport logo from './logo.png';\n\nconst useStyles = makeStyles((theme) => ({\n    customLink: {\n      '& > *': {\n        margin: theme.spacing(1),\n        width: '5',\n      },\n    \n    },\n\n  }));\n\n\n\nexport default function ActiveLastBreadcrumb() {\n \n  return (\n    <Breadcrumbs separator=\"\" aria-label=\"breadcrumb\">\n      <Link className=\"custom-link\" color=\"white\" href=\"/\">\n        <img className=\"home-logo\" src={logo} alt=\"\"></img>\n      </Link>\n      <Link className=\"custom-link\" color=\"white\" href=\"/practice\" >\n        practice\n      </Link>\n      <Link className=\"custom-link\" color=\"white\" href=\"/test\" >\n        test\n      </Link>\n      <Link className=\"custom-link\" color=\"white\" href=\"/typer\">\n        typer\n      </Link>\n      <Link className=\"custom-link\" color=\"white\" href=\"/characters\">\n        characters\n      </Link>\n      <Link className=\"custom-link\" color=\"white\" href=\"/about\">\n        about\n      </Link>\n    </Breadcrumbs>\n  );\n}","/Users/Jacky/Documents/GitHub/read-chinese/src/components/Test.js",["61","62","63","64"],"import React,{useEffect} from \"react\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles, ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport TextField from '@material-ui/core/TextField';\nimport axios from 'axios';\nimport {chinese} from './chinesedata';\nimport { green, red } from \"@material-ui/core/colors\";\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      '& > *': {\n        margin: theme.spacing(1),\n        width: '5',\n      },\n    \n    },\n    alertRoot: {\n        width: '100%',\n        '& > * + *': {\n          marginTop: theme.spacing(2),\n        },\n      },\n    TextField: {\n        color: \"white\",\n        fontSize: \"18px\",\n        borderColor: 'white',\n    },\n    underline: {\n        color: 'red' ,\n        '&::after': {\n          border: '2px solid red'\n        }\n      }\n\n  }));\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: red,\n  },\n});\n\nexport default function Test(){\n    const [selectedCharacter, setSelectedCharacter] = React.useState(0);\n    const [boolean, setBoolean] = React.useState(true);\n    const [inputValue, setInputValue] = React.useState(\"\");\n    const classes = useStyles();\n\n    const [answer, setAnswer] = React.useState([]);\n    const [openCorrect, setOpenCorrect] = React.useState(false);\n    const [openWrong, setOpenWrong] = React.useState(false);\n    const [chinese, setChinese] = React.useState({chinese:[]});\n    \n    const handleClick = () => {\n        handleClose();\n        if (inputValue === chinese.chinese[selectedCharacter].pinyinWithoutTone){\n            setOpenCorrect(true);\n        }\n        else {\n            setOpenWrong(true);\n        }\n    };\n\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n        return;\n        }\n        setOpenCorrect(false);\n        setOpenWrong(false);\n    };\n\n    //Update value of input text field\n    const handleChange = (e) => {\n        e.preventDefault();\n        setInputValue(e.target.value);\n    };\n  \n    //Handle users submit enter\n    const handleKeyDown = (e) => {\n        if (e.keyCode === 13){\n            e.preventDefault();\n            const previousChinese = chinese.chinese[selectedCharacter];\n            setAnswer([previousChinese.pinyin, inputValue, previousChinese.character, previousChinese.meaning]);\n            setSelectedCharacter((selectedCharacter + 1 < chinese.chinese.length ) ? selectedCharacter + 1 : 0);\n            handleClick();\n\n            setInputValue(\"\");\n            console.log(chinese.chinese[selectedCharacter].character);\n         }\n    };\n\n    React.useEffect(() =>{ \n        axios.get('http://localhost:5000/chinese/')\n      .then(response => {\n        setChinese({ chinese: response.data })\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n        \n    }, []);\n    /*React.useEffect(() => { // post chinese characters to mongodb\n        var i;\n        for (i = 0; i < 100; i++){\n            axios.post('http://localhost:5000/chinese/add', chinese[i])\n        }   \n            \n      }, []);*/\n   \n    return(\n        <div>\n            <h1>\n                {chinese.chinese[selectedCharacter] ? chinese.chinese[selectedCharacter].character : \"\"}\n            </h1>\n            <form className={classes.root} noValidate autoComplete=\"off\">\n                <ThemeProvider theme={theme}>\n                  {boolean && <TextField value={inputValue} id=\"standard-basic\" onChange={handleChange} onKeyDown={handleKeyDown} label=\"\" inputProps={{ underline: classes.underline, className: classes.TextField, min: 0, style: { textAlign: 'center' }}} />}\n                </ThemeProvider>\n            </form>\n            <div className={classes.alertRoot}>\n                <Snackbar anchorOrigin={{vertical:'center', horizontal:'center'}} open={openCorrect} onClose={handleClose}>\n                    <Alert onClose={handleClose} severity=\"success\">\n                        Correct: {answer[2]} - {answer[0]}\n                        <br/>\n                        Meaning: {answer[3]}\n                        \n                    </Alert>\n                </Snackbar>\n                <Snackbar anchorOrigin={{vertical:'center', horizontal:'center'}} open={openWrong} onClose={handleClose}>\n                    <Alert onClose={handleClose} severity=\"error\">\n                        Your answer: {answer[1]}\n                        <br/>\n                        Correct answer: {answer[2]} - {answer[0]}\n                        <br/>\n                        Meaning: {answer[3]}\n                    </Alert>\n                </Snackbar>\n            </div>\n        </div>\n    );\n}\n\n\n\n\n","/Users/Jacky/Documents/GitHub/read-chinese/src/components/Practice.js",["65","66","67","68","69"],"/Users/Jacky/Documents/GitHub/read-chinese/src/components/About.js",[],"/Users/Jacky/Documents/GitHub/read-chinese/src/components/Characters.js",[],"/Users/Jacky/Documents/GitHub/read-chinese/src/components/Typer.js",["70","71","72"],"import React,{useEffect} from \"react\";\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { makeStyles, ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport TextField from '@material-ui/core/TextField';\nimport axios from 'axios';\nimport { red } from \"@material-ui/core/colors\";\nimport \"./../index.css\";\nimport BackspaceIcon from '@material-ui/icons/Backspace';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      '& > *': {\n        margin: theme.spacing(1),\n        width: '5',\n      },\n    \n    },\n    alertRoot: {\n        width: '100%',\n        '& > * + *': {\n          marginTop: theme.spacing(2),\n        },\n      },\n    TextField: {\n        color: \"white\",\n        fontSize: \"18px\",\n    },\n    underline: {\n        color: 'red' ,\n        '&::after': {\n          border: '2px solid red'\n        }\n      },\n      root2: {\n        flexGrow: 1,\n        fontSize: 15,\n        marginTop: 40,\n      },\n      paper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: 'white',\n        backgroundColor: 'transparent',\n        boxShadow: 'none',  \n        justify: 'center',\n        height: 194,\n      },\n      control: {\n        padding: theme.spacing(2),\n      },\n\n  }));\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: red,\n  },\n});\n\nexport default function Test(){\n    const [selectedCharacter, setSelectedCharacter] = React.useState(0);\n    const [boolean, setBoolean] = React.useState(true);\n    const [inputValue, setInputValue] = React.useState(\"\");\n    const [divList, setDivList] = React.useState([]);\n    const [selectList, setSelectList] = React.useState([]);\n    const [chinese, setChinese] = React.useState({chinese:[]});\n    const [result, setResult] = React.useState(\"\");\n    const classes = useStyles();\n\n\n    //Update value of input text field\n    const handleChange = (e) => {\n        e.preventDefault();\n        \n        setInputValue(e.target.value);\n        \n        \n        \n    };\n\n    function isNumber(n) { return !isNaN(parseFloat(n)) && !isNaN(n - 0) }\n\n    const handleResult = (e) => {\n        if (e < divList.length){\n            setResult(result + selectList[e]);\n            setInputValue(\"\");\n        }\n\n    };\n\n    const handleClear = () => {\n        setResult(\"\");\n    }\n\n    const handleDelete = () => {\n        setResult(result.slice(0,-1));\n    }\n    //Handle users submit enter\n    const handleKeyDown = (e) => {\n        if (isNumber(String.fromCharCode(e.keyCode)) && divList.length>0){\n            handleResult(e.keyCode-48);\n        }\n        \n        if (e.keyCode === 13){  \n            e.preventDefault();\n           \n            setSelectedCharacter((selectedCharacter + 1 < chinese.chinese.length ) ? selectedCharacter + 1 : 0);\n\n            setInputValue(\"\");\n            setDivList([]);\n         }\n    };\n    \n    useEffect(() => {\n        if (Number(inputValue) || inputValue === '0'){\n            setInputValue(\"\");\n        }\n\n        if (inputValue){\n            const filtered = (chinese.chinese.filter(el => el.pinyinWithoutTone === inputValue));\n            const divList = [];\n            const selectList = [];\n            for (var i = 0 ; i < filtered.length ; i++){\n                divList.push(<div className=\"result\">{String(i) + \" - \" + (filtered[i].character + \": \" + filtered[i].meaning)}</div>);\n                \n                selectList.push(filtered[i].character);\n            }\n            setDivList(divList);\n            setSelectList(selectList);\n        }\n        \n      }, [inputValue]);\n\n      const [display, setDisplay] = React.useState(<Paper className={classes.paper}/>);\n\n\n      const organiseDisplay = () => {\n        setDisplay(<Paper className={classes.paper}/>);\n        if (divList.length > 0){\n            var display = [];\n            var temp = [...divList]\n            const result = new Array(Math.ceil(temp.length / 6))\n                        .fill()\n                        .map(_ => temp.splice(0, 6))\n                    \n            for ( var i = 0 ; i < Math.ceil(divList.length/6) ; i++){\n            display.push(\n               <Grid  key={i} item>\n                <Paper className={classes.paper}>\n                  {result[i]}\n                </Paper>\n              </Grid>)\n            }\n           setDisplay(display);\n        }\n     }\n\n    React.useEffect(() =>{ \n        axios.get('http://localhost:5000/chinese/')\n      .then(response => {\n        setChinese({ chinese: response.data })\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n        \n    }, []);\n   \n    React.useEffect(() =>{ \n        organiseDisplay();\n    }, [divList]);\n   \n    return(\n        <div>\n            \n            <Grid container className={classes.root2} spacing={2}>\n                <Grid item xs={12}>\n                    <Grid container justify=\"center\" spacing={2}>\n                        {display}    \n                    </Grid>\n                </Grid>\n            </Grid>\n            \n            <form className={classes.root} noValidate autoComplete=\"off\">\n                <ThemeProvider theme={theme}>\n                  {boolean && <TextField value={inputValue} id=\"standard-basic\" onChange={handleChange} onKeyDown={handleKeyDown} label=\"\" inputProps={{ underline: classes.underline, className: classes.TextField, min: 0, style: { textAlign: 'center' }}} />}\n                </ThemeProvider>\n            </form>\n            <IconButton onClick={()=>handleDelete()} >\n                    <BackspaceIcon />\n            </IconButton>\n            <IconButton onClick={()=>handleClear()} >\n                    <DeleteIcon />\n            </IconButton>\n            <div className=\"result2\">\n                {result}\n            </div>\n        </div>\n    );\n}\n\n","/Users/Jacky/Documents/GitHub/read-chinese/src/components/Groupbar.js",[],"/Users/Jacky/Documents/GitHub/read-chinese/src/components/GroupbarElement.js",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":1,"column":8,"nodeType":"79","messageId":"80","endLine":1,"endColumn":12},{"ruleId":"77","severity":1,"message":"81","line":4,"column":20,"nodeType":"79","messageId":"80","endLine":4,"endColumn":34},{"ruleId":"77","severity":1,"message":"82","line":4,"column":35,"nodeType":"79","messageId":"80","endLine":4,"endColumn":48},{"ruleId":"77","severity":1,"message":"83","line":8,"column":7,"nodeType":"79","messageId":"80","endLine":8,"endColumn":16},{"ruleId":"77","severity":1,"message":"84","line":1,"column":15,"nodeType":"79","messageId":"80","endLine":1,"endColumn":24},{"ruleId":"77","severity":1,"message":"85","line":7,"column":9,"nodeType":"79","messageId":"80","endLine":7,"endColumn":16},{"ruleId":"77","severity":1,"message":"86","line":8,"column":10,"nodeType":"79","messageId":"80","endLine":8,"endColumn":15},{"ruleId":"77","severity":1,"message":"87","line":50,"column":21,"nodeType":"79","messageId":"80","endLine":50,"endColumn":31},{"ruleId":"77","severity":1,"message":"88","line":2,"column":8,"nodeType":"79","messageId":"80","endLine":2,"endColumn":16},{"ruleId":"77","severity":1,"message":"89","line":3,"column":8,"nodeType":"79","messageId":"80","endLine":3,"endColumn":14},{"ruleId":"77","severity":1,"message":"90","line":7,"column":8,"nodeType":"79","messageId":"80","endLine":7,"endColumn":13},{"ruleId":"77","severity":1,"message":"91","line":33,"column":9,"nodeType":"79","messageId":"80","endLine":33,"endColumn":20},{"ruleId":"77","severity":1,"message":"92","line":37,"column":9,"nodeType":"79","messageId":"80","endLine":37,"endColumn":21},{"ruleId":"77","severity":1,"message":"87","line":65,"column":21,"nodeType":"79","messageId":"80","endLine":65,"endColumn":31},{"ruleId":"93","severity":1,"message":"94","line":135,"column":10,"nodeType":"95","endLine":135,"endColumn":22,"suggestions":"96"},{"ruleId":"93","severity":1,"message":"97","line":174,"column":8,"nodeType":"95","endLine":174,"endColumn":17,"suggestions":"98"},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'createMuiTheme' is defined but never used.","'ThemeProvider' is defined but never used.","'useStyles' is assigned a value but never used.","'useEffect' is defined but never used.","'chinese' is defined but never used.","'green' is defined but never used.","'setBoolean' is assigned a value but never used.","'Backdrop' is defined but never used.","'Button' is defined but never used.","'Paper' is defined but never used.","'handleClose' is assigned a value but never used.","'handleToggle' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'chinese.chinese'. Either include it or remove the dependency array.","ArrayExpression",["101"],"React Hook React.useEffect has a missing dependency: 'organiseDisplay'. Either include it or remove the dependency array.",["102"],"no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},"Update the dependencies array to be: [chinese.chinese, inputValue]",{"range":"107","text":"108"},"Update the dependencies array to be: [divList, organiseDisplay]",{"range":"109","text":"110"},[3664,3676],"[chinese.chinese, inputValue]",[4770,4779],"[divList, organiseDisplay]"]