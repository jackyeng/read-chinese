{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Jacky/Documents/GitHub/read-chinese/src/components/Test.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from '@material-ui/core/TextField';\nimport axios from 'axios';\nimport { chinese } from './chinesedata';\n\nfunction Alert(props) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 12\n  }, this);\n}\n\n_c = Alert;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '5'\n    }\n  },\n  alertRoot: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2)\n    }\n  },\n  TextField: {\n    color: \"white\",\n    fontSize: \"18px\",\n    borderColor: 'white'\n  },\n  underline: {\n    color: 'red',\n    '&::after': {\n      border: '2px solid red'\n    }\n  }\n}));\nexport default function Test() {\n  _s();\n\n  const [selectedCharacter, setSelectedCharacter] = React.useState(0);\n  const [boolean, setBoolean] = React.useState(true);\n  const [inputValue, setInputValue] = React.useState(\"\");\n  const classes = useStyles();\n  const [answer, setAnswer] = React.useState([]);\n  const [openCorrect, setOpenCorrect] = React.useState(false);\n  const [openWrong, setOpenWrong] = React.useState(false); //const [chinese, setChinese] = React.useState({chinese:[]});\n\n  const handleClick = () => {\n    handleClose();\n\n    if (inputValue === chinese.chinese[selectedCharacter].pinyinWithoutTone) {\n      setOpenCorrect(true);\n    } else {\n      setOpenWrong(true);\n    }\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpenCorrect(false);\n    setOpenWrong(false);\n  }; //Update value of input text field\n\n\n  const handleChange = e => {\n    e.preventDefault();\n    setInputValue(e.target.value);\n  }; //Handle users submit enter\n\n\n  const handleKeyDown = e => {\n    if (e.keyCode === 13) {\n      e.preventDefault();\n      const previousChinese = chinese.chinese[selectedCharacter];\n      setAnswer([previousChinese.pinyin, inputValue, previousChinese.character, previousChinese.meaning]);\n      setSelectedCharacter(selectedCharacter + 1 < chinese.chinese.length ? selectedCharacter + 1 : 0);\n      handleClick();\n      setInputValue(\"\");\n      console.log(chinese.chinese[selectedCharacter].character);\n    }\n  };\n\n  React.useEffect(() => {\n    // post chinese characters to mongodb\n    var i;\n    console.log(chinese.length);\n\n    for (i = 1200; i < 1500; i++) {\n      axios.post('http://localhost:5000/chinese/add', chinese[i]);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Test, \"cTO0jlldai94J+ki0co/rAPlbTE=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = Test;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Alert\");\n$RefreshReg$(_c2, \"Test\");","map":{"version":3,"sources":["/Users/Jacky/Documents/GitHub/read-chinese/src/components/Test.js"],"names":["React","useEffect","Snackbar","MuiAlert","makeStyles","TextField","axios","chinese","Alert","props","useStyles","theme","root","margin","spacing","width","alertRoot","marginTop","color","fontSize","borderColor","underline","border","Test","selectedCharacter","setSelectedCharacter","useState","boolean","setBoolean","inputValue","setInputValue","classes","answer","setAnswer","openCorrect","setOpenCorrect","openWrong","setOpenWrong","handleClick","handleClose","pinyinWithoutTone","event","reason","handleChange","e","preventDefault","target","value","handleKeyDown","keyCode","previousChinese","pinyin","character","meaning","length","console","log","i","post"],"mappings":"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","sourcesContent":["import React,{useEffect} from \"react\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from '@material-ui/core/TextField';\nimport axios from 'axios';\nimport {chinese} from './chinesedata';\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      '& > *': {\n        margin: theme.spacing(1),\n        width: '5',\n      },\n    \n    },\n    alertRoot: {\n        width: '100%',\n        '& > * + *': {\n          marginTop: theme.spacing(2),\n        },\n      },\n    TextField: {\n        color: \"white\",\n        fontSize: \"18px\",\n        borderColor: 'white',\n    },\n    underline: {\n        color: 'red' ,\n        '&::after': {\n          border: '2px solid red'\n        }\n      }\n\n  }));\n\nexport default function Test(){\n    const [selectedCharacter, setSelectedCharacter] = React.useState(0);\n    const [boolean, setBoolean] = React.useState(true);\n    const [inputValue, setInputValue] = React.useState(\"\");\n    const classes = useStyles();\n\n    const [answer, setAnswer] = React.useState([]);\n    const [openCorrect, setOpenCorrect] = React.useState(false);\n    const [openWrong, setOpenWrong] = React.useState(false);\n    //const [chinese, setChinese] = React.useState({chinese:[]});\n    \n    const handleClick = () => {\n        handleClose();\n        if (inputValue === chinese.chinese[selectedCharacter].pinyinWithoutTone){\n            setOpenCorrect(true);\n        }\n        else {\n            setOpenWrong(true);\n        }\n    };\n\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n        return;\n        }\n        setOpenCorrect(false);\n        setOpenWrong(false);\n    };\n\n    //Update value of input text field\n    const handleChange = (e) => {\n        e.preventDefault();\n        setInputValue(e.target.value);\n    };\n  \n    //Handle users submit enter\n    const handleKeyDown = (e) => {\n        if (e.keyCode === 13){\n            e.preventDefault();\n            const previousChinese = chinese.chinese[selectedCharacter];\n            setAnswer([previousChinese.pinyin, inputValue, previousChinese.character, previousChinese.meaning]);\n            setSelectedCharacter((selectedCharacter + 1 < chinese.chinese.length ) ? selectedCharacter + 1 : 0);\n            handleClick();\n\n            setInputValue(\"\");\n            console.log(chinese.chinese[selectedCharacter].character);\n         }\n    };\n\n    \n    React.useEffect(() => { // post chinese characters to mongodb\n        var i;\n        console.log(chinese.length);\n        for (i = 1200; i < 1500; i++){\n            axios.post('http://localhost:5000/chinese/add', chinese[i])\n        }   \n            \n      }, []);\n   \n    return(\n        <div/>\n    );\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}