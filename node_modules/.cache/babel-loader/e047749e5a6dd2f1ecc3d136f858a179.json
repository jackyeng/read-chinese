{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Jacky/Documents/GitHub/read-chinese/src/components/Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from '@material-ui/core/TextField';\n\nfunction Alert(props) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 12\n  }, this);\n}\n\n_c = Alert;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '5'\n    }\n  },\n  alertRoot: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2)\n    }\n  },\n  TextField: {\n    color: \"white\",\n    fontSize: \"18px\"\n  }\n}));\nexport default function Main() {\n  _s();\n\n  const [selectedCharacter, setSelectedCharacter] = React.useState(0);\n  const [boolean, setBoolean] = React.useState(true);\n  const [inputValue, setInputValue] = React.useState(\"\");\n  const classes = useStyles();\n  const characters = ['我', '的', '你', '是', '了'];\n  const pinyin = ['wǒ', 'de', 'nǐ', 'shì', 'le'];\n  const pinyinWithoutTone = ['wo', 'de', 'ni', 'shi', 'le'];\n  const [open, setOpen] = React.useState(false);\n\n  const handleClick = () => {\n    if (inputValue === pinyinWithoutTone[selectedCharacter]) {\n      correctAnswer();\n    } else {\n      wrongAnswer();\n    }\n  };\n\n  const correctAnswer = () => {\n    setOpen(true);\n  };\n\n  const wrongAnswer = () => {};\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  }; //Update value of input text field\n\n\n  const handleChange = e => {\n    e.preventDefault();\n    setInputValue(e.target.value);\n  }; //Handle users submit enter\n\n\n  const handleKeyDown = e => {\n    if (e.keyCode === 13) {\n      e.preventDefault();\n      setSelectedCharacter(selectedCharacter + 1 < 5 ? selectedCharacter + 1 : 0);\n      setInputValue(\"\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: characters[selectedCharacter]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.root,\n      noValidate: true,\n      autoComplete: \"off\",\n      children: boolean && /*#__PURE__*/_jsxDEV(TextField, {\n        value: inputValue,\n        id: \"standard-basic\",\n        onChange: handleChange,\n        onKeyDown: handleKeyDown,\n        label: \"\",\n        inputProps: {\n          className: classes.TextField,\n          min: 0,\n          style: {\n            textAlign: 'center'\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.alertRoot,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: handleClick,\n        children: \"Open success snackbar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: open,\n        onClose: handleClose,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          onClose: handleClose,\n          severity: \"success\",\n          children: \"This is a success message!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main, \"Lx4f/HXCHtzIAtWUl1tXanFrk28=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = Main;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Alert\");\n$RefreshReg$(_c2, \"Main\");","map":{"version":3,"sources":["/Users/Jacky/Documents/GitHub/read-chinese/src/components/Main.js"],"names":["React","useState","useEffect","Button","Snackbar","MuiAlert","makeStyles","TextField","Alert","props","useStyles","theme","root","margin","spacing","width","alertRoot","marginTop","color","fontSize","Main","selectedCharacter","setSelectedCharacter","boolean","setBoolean","inputValue","setInputValue","classes","characters","pinyin","pinyinWithoutTone","open","setOpen","handleClick","correctAnswer","wrongAnswer","handleClose","event","reason","handleChange","e","preventDefault","target","value","handleKeyDown","keyCode","className","min","style","textAlign"],"mappings":"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","sourcesContent":["import React,{useState, useEffect } from \"react\";\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from '@material-ui/core/TextField';\n\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      '& > *': {\n        margin: theme.spacing(1),\n        width: '5',\n      },\n    \n    },\n    alertRoot: {\n        width: '100%',\n        '& > * + *': {\n          marginTop: theme.spacing(2),\n        },\n      },\n    TextField: {\n        color: \"white\",\n        fontSize: \"18px\",\n    },\n\n  }));\n\n\n\nexport default function Main(){\n    const [selectedCharacter, setSelectedCharacter] = React.useState(0);\n    const [boolean, setBoolean] = React.useState(true);\n    const [inputValue, setInputValue] = React.useState(\"\");\n    const classes = useStyles();\n    const characters = ['我','的','你','是','了'];\n    const pinyin = ['wǒ','de','nǐ','shì','le'];\n    const pinyinWithoutTone = ['wo','de','ni','shi','le'];\n\n    const [open, setOpen] = React.useState(false);\n\n    const handleClick = () => {\n        if (inputValue === pinyinWithoutTone[selectedCharacter]){\n            correctAnswer();\n        }\n        else {\n            wrongAnswer();\n        }\n        \n    };\n\n    const correctAnswer = () => {\n        setOpen(true);\n    };\n\n    const wrongAnswer = () => {\n\n    };\n\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n        return;\n        }\n\n        setOpen(false);\n    };\n\n    //Update value of input text field\n    const handleChange = (e) => {\n        e.preventDefault();\n        setInputValue(e.target.value);\n    };\n  \n    //Handle users submit enter\n    const handleKeyDown = (e) => {\n        if (e.keyCode === 13){\n            e.preventDefault();\n            setSelectedCharacter((selectedCharacter + 1 < 5 ) ? selectedCharacter + 1 : 0);\n            setInputValue(\"\");\n        }\n    };\n\n   \n    return(\n        <div>\n            <h1>\n                {characters[selectedCharacter]}\n            </h1>\n            <form className={classes.root} noValidate autoComplete=\"off\">\n                {boolean && <TextField value={inputValue} id=\"standard-basic\"  onChange={handleChange} onKeyDown={handleKeyDown} label=\"\" inputProps={{className: classes.TextField,min: 0, style: { textAlign: 'center' }}} />}\n            </form>\n            <div className={classes.alertRoot}>\n                <Button variant=\"outlined\" onClick={handleClick}>\n                    Open success snackbar\n                </Button>\n                <Snackbar open={open} onClose={handleClose}>\n                    <Alert onClose={handleClose} severity=\"success\">\n                        This is a success message!\n                    </Alert>\n                </Snackbar>\n            </div>\n        </div>\n    );\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}