{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Jacky/Documents/GitHub/read-chinese/src/components/Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from '@material-ui/core/TextField';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '5'\n    }\n  },\n  TextField: {\n    color: \"white\",\n    fontSize: \"18px\"\n  }\n}));\nexport default function Main() {\n  _s();\n\n  const [selectedCharacter, setSelectedCharacter] = React.useState(0);\n  const [boolean, setBoolean] = React.useState(true);\n  const [inputValue, setInputValue] = React.useState(\"\");\n  const classes = useStyles();\n  const characters = ['我', '的', '你', '是', '了'];\n  const pinyin = ['wǒ', 'de', 'nǐ', 'shì', 'le'];\n  const pinyinWithoutTone = ['wo', 'de', 'ni', 'shi', 'le'];\n\n  const handleChange = e => {\n    e.preventDefault();\n    setInputValue(e.target.value);\n  };\n\n  const handleKeyDown = e => {\n    if (e.keyCode == 13) {\n      e.preventDefault();\n      setSelectedCharacter(selectedCharacter + 1 < 5 ? selectedCharacter + 1 : 0);\n      setInputValue(\"\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: characters[selectedCharacter]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.root,\n      noValidate: true,\n      autoComplete: \"off\",\n      children: boolean && /*#__PURE__*/_jsxDEV(TextField, {\n        value: inputValue,\n        id: \"standard-basic\",\n        onChange: handleChange,\n        onKeyDown: handleKeyDown,\n        label: \"\",\n        inputProps: {\n          className: classes.TextField,\n          min: 0,\n          style: {\n            textAlign: 'center'\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main, \"aF+Xc8Uj7mVpj9rUWNKEkdWYMMc=\", false, function () {\n  return [useStyles];\n});\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/Jacky/Documents/GitHub/read-chinese/src/components/Main.js"],"names":["React","useState","useEffect","makeStyles","TextField","useStyles","theme","root","margin","spacing","width","color","fontSize","Main","selectedCharacter","setSelectedCharacter","boolean","setBoolean","inputValue","setInputValue","classes","characters","pinyin","pinyinWithoutTone","handleChange","e","preventDefault","target","value","handleKeyDown","keyCode","className","min","style","textAlign"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAGA,MAAMC,SAAS,GAAGF,UAAU,CAAEG,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACJ,aAAS;AACPC,MAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADD;AAEPC,MAAAA,KAAK,EAAE;AAFA;AADL,GAD+B;AAQrCN,EAAAA,SAAS,EAAE;AACPO,IAAAA,KAAK,EAAE,OADA;AAEPC,IAAAA,QAAQ,EAAE;AAFH;AAR0B,CAAZ,CAAD,CAA5B;AAcA,eAAe,SAASC,IAAT,GAAe;AAAA;;AAC1B,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4Cf,KAAK,CAACC,QAAN,CAAe,CAAf,CAAlD;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBjB,KAAK,CAACC,QAAN,CAAe,IAAf,CAA9B;AACA,QAAM,CAACiB,UAAD,EAAaC,aAAb,IAA8BnB,KAAK,CAACC,QAAN,CAAe,EAAf,CAApC;AACA,QAAMmB,OAAO,GAAGf,SAAS,EAAzB;AACA,QAAMgB,UAAU,GAAG,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,EAAiB,GAAjB,CAAnB;AACA,QAAMC,MAAM,GAAG,CAAC,IAAD,EAAM,IAAN,EAAW,IAAX,EAAgB,KAAhB,EAAsB,IAAtB,CAAf;AACA,QAAMC,iBAAiB,GAAG,CAAC,IAAD,EAAM,IAAN,EAAW,IAAX,EAAgB,KAAhB,EAAsB,IAAtB,CAA1B;;AAEA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACAP,IAAAA,aAAa,CAACM,CAAC,CAACE,MAAF,CAASC,KAAV,CAAb;AACH,GAHD;;AAKA,QAAMC,aAAa,GAAIJ,CAAD,IAAO;AACzB,QAAIA,CAAC,CAACK,OAAF,IAAa,EAAjB,EAAoB;AAChBL,MAAAA,CAAC,CAACC,cAAF;AACAX,MAAAA,oBAAoB,CAAED,iBAAiB,GAAG,CAApB,GAAwB,CAAzB,GAA+BA,iBAAiB,GAAG,CAAnD,GAAuD,CAAxD,CAApB;AACAK,MAAAA,aAAa,CAAC,EAAD,CAAb;AACH;AACJ,GAND;;AASA,sBACI;AAAA,4BACI;AAAA,gBACKE,UAAU,CAACP,iBAAD;AADf;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAM,MAAA,SAAS,EAAEM,OAAO,CAACb,IAAzB;AAA+B,MAAA,UAAU,MAAzC;AAA0C,MAAA,YAAY,EAAC,KAAvD;AAAA,gBACKS,OAAO,iBAAI,QAAC,SAAD;AAAW,QAAA,KAAK,EAAEE,UAAlB;AAA8B,QAAA,EAAE,EAAC,gBAAjC;AAAmD,QAAA,QAAQ,EAAEM,YAA7D;AAA2E,QAAA,SAAS,EAAEK,aAAtF;AAAqG,QAAA,KAAK,EAAC,EAA3G;AAA8G,QAAA,UAAU,EAAE;AAACE,UAAAA,SAAS,EAAEX,OAAO,CAAChB,SAApB;AAA8B4B,UAAAA,GAAG,EAAE,CAAnC;AAAsCC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,SAAS,EAAE;AAAb;AAA7C;AAA1H;AAAA;AAAA;AAAA;AAAA;AADhB;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GAlCuBrB,I;UAIJR,S;;;KAJIQ,I","sourcesContent":["import React,{useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from '@material-ui/core/TextField';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      '& > *': {\n        margin: theme.spacing(1),\n        width: '5',\n      },\n    \n    },\n    TextField: {\n        color: \"white\",\n        fontSize: \"18px\",\n    },\n  }));\n\nexport default function Main(){\n    const [selectedCharacter, setSelectedCharacter] = React.useState(0);\n    const [boolean, setBoolean] = React.useState(true);\n    const [inputValue, setInputValue] = React.useState(\"\");\n    const classes = useStyles();\n    const characters = ['我','的','你','是','了'];\n    const pinyin = ['wǒ','de','nǐ','shì','le'];\n    const pinyinWithoutTone = ['wo','de','ni','shi','le'];\n\n    const handleChange = (e) => {\n        e.preventDefault();\n        setInputValue(e.target.value);\n    };\n  \n    const handleKeyDown = (e) => {\n        if (e.keyCode == 13){\n            e.preventDefault();\n            setSelectedCharacter((selectedCharacter + 1 < 5 ) ? selectedCharacter + 1 : 0);\n            setInputValue(\"\");\n        }\n    };\n\n   \n    return(\n        <div>\n            <h1>\n                {characters[selectedCharacter]}\n            </h1>\n            <form className={classes.root} noValidate autoComplete=\"off\">\n                {boolean && <TextField value={inputValue} id=\"standard-basic\"  onChange={handleChange} onKeyDown={handleKeyDown} label=\"\" inputProps={{className: classes.TextField,min: 0, style: { textAlign: 'center' }}} />}\n            </form>\n            \n        </div>\n    );\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}