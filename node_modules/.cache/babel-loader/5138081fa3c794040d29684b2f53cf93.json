{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Jacky/Documents/GitHub/read-chinese/src/components/Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from '@material-ui/core/TextField';\nimport axios from 'axios';\nimport { chinese } from './chinesedata';\n\nfunction Alert(props) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 12\n  }, this);\n}\n\n_c = Alert;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '5'\n    }\n  },\n  alertRoot: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2)\n    }\n  },\n  TextField: {\n    color: \"white\",\n    fontSize: \"18px\"\n  }\n}));\nexport default function Main() {\n  _s();\n\n  const [selectedCharacter, setSelectedCharacter] = React.useState(0);\n  const [boolean, setBoolean] = React.useState(true);\n  const [inputValue, setInputValue] = React.useState(\"\");\n  const classes = useStyles();\n  const characters = ['我', '的', '你', '是', '了'];\n  const pinyin = ['wǒ', 'de', 'nǐ', 'shì', 'le'];\n  const pinyinWithoutTone = ['wo', 'de', 'ni', 'shi', 'le'];\n  const [answer, setAnswer] = React.useState([]);\n  const [openCorrect, setOpenCorrect] = React.useState(false);\n  const [openWrong, setOpenWrong] = React.useState(false);\n  const [chinese, setChinese] = React.useState({\n    chinese: []\n  });\n\n  const handleClick = () => {\n    handleClose();\n\n    if (inputValue === pinyinWithoutTone[selectedCharacter]) {\n      setOpenCorrect(true);\n    } else {\n      setOpenWrong(true);\n    }\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpenCorrect(false);\n    setOpenWrong(false);\n  }; //Update value of input text field\n\n\n  const handleChange = e => {\n    e.preventDefault();\n    setInputValue(e.target.value);\n  }; //Handle users submit enter\n\n\n  const handleKeyDown = e => {\n    if (e.keyCode === 13) {\n      e.preventDefault();\n      setAnswer([pinyin[selectedCharacter], inputValue]);\n      setSelectedCharacter(selectedCharacter + 1 < chinese.length ? selectedCharacter + 1 : 0);\n      handleClick();\n      setInputValue(\"\");\n      console.log(chinese);\n    }\n  };\n\n  React.useEffect(() => {\n    axios.get('http://localhost:5000/chinese/').then(response => {\n      setChinese([response.data]);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  /*React.useEffect(() => { // post chinese characters to mongodb\n      var i;\n      for (i = 0; i < 100; i++){\n          axios.post('http://localhost:5000/chinese/add', chinese[i])\n      }   \n          \n    }, []);*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: characters[selectedCharacter]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.root,\n      noValidate: true,\n      autoComplete: \"off\",\n      children: boolean && /*#__PURE__*/_jsxDEV(TextField, {\n        value: inputValue,\n        id: \"standard-basic\",\n        onChange: handleChange,\n        onKeyDown: handleKeyDown,\n        label: \"\",\n        inputProps: {\n          className: classes.TextField,\n          min: 0,\n          style: {\n            textAlign: 'center'\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.alertRoot,\n      children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n        open: openCorrect,\n        onClose: handleClose,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          onClose: handleClose,\n          severity: \"success\",\n          children: \"Correct\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: openWrong,\n        onClose: handleClose,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          onClose: handleClose,\n          severity: \"error\",\n          children: [\"Correct pinyin: \", answer[0], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this), \"Your answer: \", answer[1]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main, \"l7ZM9t9jFZ2AGgE7m4K79zKjnOI=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = Main;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Alert\");\n$RefreshReg$(_c2, \"Main\");","map":{"version":3,"sources":["/Users/Jacky/Documents/GitHub/read-chinese/src/components/Main.js"],"names":["React","useEffect","Snackbar","MuiAlert","makeStyles","TextField","axios","chinese","Alert","props","useStyles","theme","root","margin","spacing","width","alertRoot","marginTop","color","fontSize","Main","selectedCharacter","setSelectedCharacter","useState","boolean","setBoolean","inputValue","setInputValue","classes","characters","pinyin","pinyinWithoutTone","answer","setAnswer","openCorrect","setOpenCorrect","openWrong","setOpenWrong","setChinese","handleClick","handleClose","event","reason","handleChange","e","preventDefault","target","value","handleKeyDown","keyCode","length","console","log","get","then","response","data","catch","error","className","min","style","textAlign"],"mappings":"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","sourcesContent":["import React,{useEffect} from \"react\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from '@material-ui/core/TextField';\nimport axios from 'axios';\nimport {chinese} from './chinesedata';\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      '& > *': {\n        margin: theme.spacing(1),\n        width: '5',\n      },\n    \n    },\n    alertRoot: {\n        width: '100%',\n        '& > * + *': {\n          marginTop: theme.spacing(2),\n        },\n      },\n    TextField: {\n        color: \"white\",\n        fontSize: \"18px\",\n    },\n\n  }));\n\nexport default function Main(){\n    const [selectedCharacter, setSelectedCharacter] = React.useState(0);\n    const [boolean, setBoolean] = React.useState(true);\n    const [inputValue, setInputValue] = React.useState(\"\");\n    const classes = useStyles();\n    const characters = ['我','的','你','是','了'];\n    const pinyin = ['wǒ','de','nǐ','shì','le'];\n    const pinyinWithoutTone = ['wo','de','ni','shi','le'];\n    const [answer, setAnswer] = React.useState([]);\n    const [openCorrect, setOpenCorrect] = React.useState(false);\n    const [openWrong, setOpenWrong] = React.useState(false);\n    const [chinese, setChinese] = React.useState({chinese:[]});\n    \n    const handleClick = () => {\n        handleClose();\n        if (inputValue === pinyinWithoutTone[selectedCharacter]){\n            setOpenCorrect(true);\n        }\n        else {\n            setOpenWrong(true);\n        }\n    };\n\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n        return;\n        }\n        setOpenCorrect(false);\n        setOpenWrong(false);\n    };\n\n    //Update value of input text field\n    const handleChange = (e) => {\n        e.preventDefault();\n        setInputValue(e.target.value);\n    };\n  \n    //Handle users submit enter\n    const handleKeyDown = (e) => {\n        if (e.keyCode === 13){\n            e.preventDefault();\n\n            setAnswer([pinyin[selectedCharacter],inputValue]);\n            setSelectedCharacter((selectedCharacter + 1 < chinese.length ) ? selectedCharacter + 1 : 0);\n            handleClick();\n\n            setInputValue(\"\");\n            console.log(chinese);        }\n    };\n\n    React.useEffect(() =>{ \n        axios.get('http://localhost:5000/chinese/')\n      .then(response => {\n        setChinese([response.data])\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n        \n    }, []);\n    /*React.useEffect(() => { // post chinese characters to mongodb\n        var i;\n        for (i = 0; i < 100; i++){\n            axios.post('http://localhost:5000/chinese/add', chinese[i])\n        }   \n            \n      }, []);*/\n   \n    return(\n        <div>\n            <h1>\n                {characters[selectedCharacter]}\n            </h1>\n            <form className={classes.root} noValidate autoComplete=\"off\">\n                {boolean && <TextField value={inputValue} id=\"standard-basic\"  onChange={handleChange} onKeyDown={handleKeyDown} label=\"\" inputProps={{className: classes.TextField,min: 0, style: { textAlign: 'center' }}} />}\n            </form>\n            <div className={classes.alertRoot}>\n                <Snackbar open={openCorrect} onClose={handleClose}>\n                    <Alert onClose={handleClose} severity=\"success\">\n                        Correct \n                    </Alert>\n                </Snackbar>\n                <Snackbar open={openWrong} onClose={handleClose}>\n                    <Alert onClose={handleClose} severity=\"error\">\n                        Correct pinyin: {answer[0]} \n                        <br/>\n                        Your answer: {answer[1]}\n                    </Alert>\n                </Snackbar>\n            </div>\n        </div>\n    );\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}